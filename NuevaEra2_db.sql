-- MySQL Script generated by MySQL Workbench
-- Mon Jun  7 17:25:54 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema base_datos_constructoras
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema base_datos_constructoras
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `base_datos_constructoras` DEFAULT CHARACTER SET utf8 ;
USE `base_datos_constructoras` ;

-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Estado_Construccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Estado_Construccion` (
  `idEstado_Construccion` int auto_increment NOT NULL,
  `nom_estado_Construccion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEstado_Construccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Tipo_Construccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Tipo_Construccion` (
  `idTipo_Construccion` int auto_increment NOT NULL,
  `nom_tipo_Construccion` VARCHAR(45) NULL,
  PRIMARY KEY (`idTipo_Construccion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Ubicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Ubicacion` (
  `idUbicacion` DECIMAL NOT NULL,
  `nom_Ubicacion` VARCHAR(100) NULL,
  PRIMARY KEY (`idUbicacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Estado_disponibilidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Estado_disponibilidad` (
  `idEstado_disponibilidad` int auto_increment NOT NULL,
  `nom_estado_disponibilidad` VARCHAR(45) NULL,
  PRIMARY KEY (`idEstado_disponibilidad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Cargo` (
  `idCargo` int auto_increment NOT NULL,
  `nom_Cargo` VARCHAR(45) NULL,
  PRIMARY KEY (`idCargo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Estado_Persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Estado_Persona` (
  `idEstado_Persona` int auto_increment NOT NULL,
  `nom_estado_persona` VARCHAR(45) NULL,
  `descripcion` VARCHAR(60) NULL,
  PRIMARY KEY (`idEstado_Persona`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Tipo_rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Tipo_rol` (
  `idTipo_rol` int auto_increment NOT NULL,
  `descripcion` VARCHAR(65) NULL,
  `fecha_creacion` DATE NULL,
  PRIMARY KEY (`idTipo_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Party`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Party` (
  `idParty` varchar(10) NOT NULL,
  `idTipo_rol_party` int NULL,
  PRIMARY KEY (`idParty`),
  INDEX `idTipo_rol_party_idx` (`idTipo_rol_party` ASC) VISIBLE,
  CONSTRAINT `idTipo_rol_party`
    FOREIGN KEY (`idTipo_rol_party`)
    REFERENCES `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Persona` (
  `idParty` varchar(10) NOT NULL,
  `nombre_p` VARCHAR(45) NULL,
  `apellido_p` VARCHAR(45) NULL,
  `fecha_inicio` DATE NULL,
  `sexo` CHAR(1) NULL,
  `edad` int NULL,
  `DNI` char(8) NULL,
  `fecha_nacimiento` DATE NULL,
  `idEstado_Persona` int NULL,
  PRIMARY KEY (`idParty`),
  INDEX `idEstado_Persona_idx` (`idEstado_Persona` ASC) VISIBLE,
  CONSTRAINT `idEstado_Persona`
    FOREIGN KEY (`idEstado_Persona`)
    REFERENCES `base_datos_constructoras`.`Estado_Persona` (`idEstado_Persona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idParty`
    FOREIGN KEY (`idParty`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Privilegio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Privilegio` (
  `idPrivilegio` int auto_increment NOT NULL,
  `descripcion` VARCHAR(200) NULL,
  `Nivel` int NULL,
  PRIMARY KEY (`idPrivilegio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Usuario` (
  `idUsuario` varchar(10) NOT NULL,
  `Contraseña_Trabajador` VARCHAR(45) NULL,
  `idPrivilegio` int NULL,
  `fecha_inicio_contrato` DATE NULL,
  `idCargo` int NULL,
  `N_const_pub_visitadas` int NULL,
  `N_const_priv_visitadas` int NULL,
  `Tiempo de acceso` TIME NULL,
  `idParty` varchar(10) NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `idCargo_idx` (`idCargo` ASC) VISIBLE,
  INDEX `idParty_idx` (`idParty` ASC) VISIBLE,
  INDEX `idPrivilegio_idx` (`idPrivilegio` ASC) VISIBLE,
  CONSTRAINT `idCargo`
    FOREIGN KEY (`idCargo`)
    REFERENCES `base_datos_constructoras`.`Cargo` (`idCargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`idParty`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idPrivilegio`
    FOREIGN KEY (`idPrivilegio`)
    REFERENCES `base_datos_constructoras`.`Privilegio` (`idPrivilegio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Construccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Construccion` (
  `idConstruccion` VARCHAR(10) NOT NULL,
  `Nom_Construccion` VARCHAR(50) NULL,
  `Etapa_Construccion` VARCHAR(200) NULL,
  `Ubicacion` VARCHAR(100) NULL,
  `Direccion` VARCHAR(200) NULL,
  `Tipo_Construccion` VARCHAR(30) NULL,
  `idEstado_Construccion` int NULL,
  `idEstado_disponibilidad` int NULL,
  `Descripción_Construccion` VARCHAR(3000) NULL,
  `Comentario_Construccion` VARCHAR(150) NULL,
  `Fecha_registro_Construccion` DATE NULL,
  `Fecha_fin_Construccion` DATE NULL,
  `Fecha_actualizacion` DATE NULL,
  `idUsuarioActualizacion` varchar(10) NULL,
  PRIMARY KEY (`idConstruccion`),
  INDEX `idEstado_Construccion_idx` (`idEstado_Construccion` ASC) VISIBLE,
  INDEX `idEstado_disponibilidad_idx` (`idEstado_disponibilidad` ASC) VISIBLE,
  INDEX `idUsuarioActualizacion_idx` (`idUsuarioActualizacion` ASC) VISIBLE,
  CONSTRAINT `idEstado_Construccion`
    FOREIGN KEY (`idEstado_Construccion`)
    REFERENCES `base_datos_constructoras`.`Estado_Construccion` (`idEstado_Construccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idEstado_disponibilidad`
    FOREIGN KEY (`idEstado_disponibilidad`)
    REFERENCES `base_datos_constructoras`.`Estado_disponibilidad` (`idEstado_disponibilidad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idUsuarioActualizacion`
    FOREIGN KEY (`idUsuarioActualizacion`)
    REFERENCES `base_datos_constructoras`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Tipo_mec_contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Tipo_mec_contacto` (
  `idTipo_mec_contacto` int auto_increment NOT NULL,
  `nom_tipo_mec_contacto` VARCHAR(45) NULL,
  PRIMARY KEY (`idTipo_mec_contacto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Mecanismo_Contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Mecanismo_Contacto` (
  `idMecCont` int auto_increment NOT NULL,
  `mec_cont_alternativo` VARCHAR(45) NULL,
  `idTipo_mec_contacto` int NULL,
  `descripcion` VARCHAR(100) NULL,
  PRIMARY KEY (`idMecCont`),
  INDEX `idTipo_mec_contacto_idx` (`idTipo_mec_contacto` ASC) VISIBLE,
  CONSTRAINT `idTipo_mec_contacto`
    FOREIGN KEY (`idTipo_mec_contacto`)
    REFERENCES `base_datos_constructoras`.`Tipo_mec_contacto` (`idTipo_mec_contacto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Party_Mecanismo_Contacto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Party_Mecanismo_Contacto` (
  `idParty` varchar(10) NOT NULL,
  `fecha_inicio` DATE NULL,
  `fecha_termino` DATE NULL,
  `contacto` VARCHAR(45) NULL,
  `idMecCont` int NOT NULL,
  PRIMARY KEY (`idParty`),
  INDEX `idMecCont_idx` (`idMecCont` ASC) VISIBLE,
  CONSTRAINT `idMecCont`
    FOREIGN KEY (`idMecCont`)
    REFERENCES `base_datos_constructoras`.`Mecanismo_Contacto` (`idMecCont`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`idParty`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Organizacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Organizacion` (
  `idParty` varchar(10) NOT NULL,
  `nom_organizacion` VARCHAR(45) NULL,
  `Ingresos` DECIMAL NULL,
  `Recuento de oportunidades` DECIMAL NULL,
  INDEX `idParty_idx` (`idParty` ASC) VISIBLE,
  PRIMARY KEY (`idParty`),
    FOREIGN KEY (`idParty`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Tipo_Relacion_Party`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Tipo_Relacion_Party` (
  `idTipoRelacionParty` int auto_increment NOT NULL,
  `nom_Tipo_RP` VARCHAR(45) NULL,
  `idTipo_rol_party1` int NULL,
  `idTipo_rol_party2` int NULL,
  PRIMARY KEY (`idTipoRelacionParty`),
  INDEX `idTipo_rol_party1_idx` (`idTipo_rol_party1` ASC) VISIBLE,
  INDEX `idTipo_rol_party2_idx` (`idTipo_rol_party2` ASC) VISIBLE,
  CONSTRAINT `idTipo_rol_party1`
    FOREIGN KEY (`idTipo_rol_party1`)
    REFERENCES `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idTipo_rol_party2`
    FOREIGN KEY (`idTipo_rol_party2`)
    REFERENCES `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Relación_Party`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Relación_Party` (
  `idParty1` varchar(10) NOT NULL,
  `idRol1` int NOT NULL,
  `idParty2` varchar(10) NOT NULL,
  `idRol2` int NOT NULL,
  `idTipoRelacionParty` int NULL,
  `Fecha_inicio` DATE NULL,
  `Fecha_final` DATE NULL,
  PRIMARY KEY (`idParty1`, `idRol1`, `idParty2`, `idRol2`),
  INDEX `idParty1_idx` (`idParty1` ASC) VISIBLE,
  INDEX `idParty2_idx` (`idParty2` ASC) VISIBLE,
  INDEX `idTipoRelacionParty_idx` (`idTipoRelacionParty` ASC) VISIBLE,
  CONSTRAINT `idParty1`
    FOREIGN KEY (`idParty1`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idParty2`
    FOREIGN KEY (`idParty2`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idTipoRelacionParty`
    FOREIGN KEY (`idTipoRelacionParty`)
    REFERENCES `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Historial_aplicacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Historial_aplicacion` (
  `idHistorial_app` varchar(10) NOT NULL,
  `idTrabajador` varchar(10) NULL,
  `fecha_hora_log` DATETIME NULL,
  `fecha_hora_quit` VARCHAR(45) NULL,
  PRIMARY KEY (`idHistorial_app`),
  INDEX `idTrabajador_idx` (`idTrabajador` ASC) VISIBLE,
  CONSTRAINT `idTrabajador`
    FOREIGN KEY (`idTrabajador`)
    REFERENCES `base_datos_constructoras`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Llamada_atencion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Llamada_atencion` (
  `secuencia` int auto_increment NOT NULL,
  `idUsuario` varchar(10) NOT NULL,
  `motivo` VARCHAR(200) NULL,
  `Meta_const_visitadas` int NULL,
  `idUsuario_supervisor` varchar(10) NULL,
  PRIMARY KEY (`secuencia`, `idUsuario`),
  INDEX `idUsuario_idx` (`idUsuario_supervisor` ASC) VISIBLE,
  CONSTRAINT `idUsuario`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `base_datos_constructoras`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`idUsuario_supervisor`)
    REFERENCES `base_datos_constructoras`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Rol` (
  `idRol` int auto_increment NOT NULL,
  `nom_rol` VARCHAR(45) NULL,
  `idTipo_rol` int NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  PRIMARY KEY (`idRol`),
  INDEX `idTipo_rol_idx` (`idTipo_rol` ASC) VISIBLE,
  CONSTRAINT `idTipo_rol`
    FOREIGN KEY (`idTipo_rol`)
    REFERENCES `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Rol_party`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Rol_party` (
  `idParty` varchar(10) NOT NULL,
  `idRol` int NOT NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  PRIMARY KEY (`idParty`, `idRol`),
  INDEX `idRol_idx` (`idRol` ASC) VISIBLE,
    FOREIGN KEY (`idParty`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idRol`
    FOREIGN KEY (`idRol`)
    REFERENCES `base_datos_constructoras`.`Rol` (`idRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`C_Publica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`C_Publica` (
  `idConstruccion` varchar(10) NOT NULL,
  `cod_infobras` VARCHAR(10) NULL,
  `entidad` VARCHAR(100) NULL,
  `modalidad` VARCHAR(50) NULL,
  `Presupuesto` VARCHAR(30) NULL,
  `estado_o` VARCHAR(30) NULL,
  PRIMARY KEY (`idConstruccion`),
  CONSTRAINT `idConstruccion`
    FOREIGN KEY (`idConstruccion`)
    REFERENCES `base_datos_constructoras`.`Construccion` (`idConstruccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`C_Privada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`C_Privada` (
  `idConstruccion` varchar(10) NOT NULL,
  `pagina` VARCHAR(50) NULL,
  `url` VARCHAR(100) NULL,
  `Tipo_edificacion` VARCHAR(40) NULL,
  `Area_techada` VARCHAR(45) NULL,
  `Area_total` VARCHAR(45) NULL,
  `Constructora` varchar(50) NULL,
  `financiamiento` VARCHAR(50) NULL,
  PRIMARY KEY (`idConstruccion`),
    FOREIGN KEY (`idConstruccion`)
    REFERENCES `base_datos_constructoras`.`Construccion` (`idConstruccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `base_datos_constructoras`.`Usuario_Construccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `base_datos_constructoras`.`Usuario_Construccion` (
  `idUsuario` varchar(10) NOT NULL,
  `idConstruccion` varchar(10) NULL,
  `idContacto` varchar(10) NULL,
  `fecha_registro` DATE NULL,
  `Comentario` VARCHAR(120) NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `idConstruccion_idx` (`idConstruccion` ASC) VISIBLE,
  INDEX `idContacto_idx` (`idContacto` ASC) VISIBLE,
    FOREIGN KEY (`idUsuario`)
    REFERENCES `base_datos_constructoras`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`idConstruccion`)
    REFERENCES `base_datos_constructoras`.`Construccion` (`idConstruccion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idContacto`
    FOREIGN KEY (`idContacto`)
    REFERENCES `base_datos_constructoras`.`Party` (`idParty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- Insercion de registros --

-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Estado_Construccion`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Estado_Construccion` (`idEstado_Construccion`, `nom_estado_Construccion`) VALUES (1, 'Activa');
INSERT INTO `base_datos_constructoras`.`Estado_Construccion` (`idEstado_Construccion`, `nom_estado_Construccion`) VALUES (2, 'Inactiva');
INSERT INTO `base_datos_constructoras`.`Estado_Construccion` (`idEstado_Construccion`, `nom_estado_Construccion`) VALUES (3, 'Vencida');
INSERT INTO `base_datos_constructoras`.`Estado_Construccion` (`idEstado_Construccion`, `nom_estado_Construccion`) VALUES (4, 'Duda');
INSERT INTO `base_datos_constructoras`.`Estado_Construccion` (`idEstado_Construccion`, `nom_estado_Construccion`) VALUES (5, 'NA');

COMMIT;


-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Ubicacion`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (2, 'Amazonas');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (3, 'Ancash');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (4, 'Apurimac');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (5, 'Arequipa');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (6, 'Ayacucho');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (7, 'Cajamarca');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (8, 'Cusco');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (9, 'Huancavelica');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (10, 'Huanuco');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (11, 'Ica');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (12, 'Junín');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (13, 'La Libertad');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (14, 'Lambayeque');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (15, 'Loreto');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (16, 'Madre de Dios');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (17, 'Moquegua');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (18, 'Pasco');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (19, 'Piura');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (20, 'Puno');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (21, 'San Martin');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (22, 'Tacna');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (24, 'Ucayali');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (1, 'Lima');
INSERT INTO `base_datos_constructoras`.`Ubicacion` (`idUbicacion`, `nom_Ubicacion`) VALUES (23, 'Tumbes');

COMMIT;


-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Estado_disponibilidad`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Estado_disponibilidad` (`idEstado_disponibilidad`, `nom_estado_disponibilidad`) VALUES (1, 'No visitado');
INSERT INTO `base_datos_constructoras`.`Estado_disponibilidad` (`idEstado_disponibilidad`, `nom_estado_disponibilidad`) VALUES (2, 'Marcado');
INSERT INTO `base_datos_constructoras`.`Estado_disponibilidad` (`idEstado_disponibilidad`, `nom_estado_disponibilidad`) VALUES (3, 'Visitado');

COMMIT;


-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Tipo_rol`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (1, 'Empleado', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (2, 'Contratista', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (3, 'Miembro de familia', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (4, 'Contacto', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (5, 'Cliente a facturar', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (6, 'Cliente a enviar', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (7, 'Cliente final', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (8, 'Distribuidor', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (9, 'Socio', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (10, 'Competidor', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (11, 'Agente', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (12, 'Agencia reguladora', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (13, 'Household', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (14, 'Asociación', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (15, 'Proveedor', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (16, 'Unidad de Organización', NULL);
INSERT INTO `base_datos_constructoras`.`Tipo_rol` (`idTipo_rol`, `descripcion`, `fecha_creacion`) VALUES (17, 'Canal de distribucion', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Tipo_mec_contacto`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Tipo_mec_contacto` (`idTipo_mec_contacto`, `nom_tipo_mec_contacto`) VALUES (1, 'Telefono');
INSERT INTO `base_datos_constructoras`.`Tipo_mec_contacto` (`idTipo_mec_contacto`, `nom_tipo_mec_contacto`) VALUES (2, 'Correo');

COMMIT;


-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Tipo_Relacion_Party`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (1, 'relación de proveedor', 15, 16);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (2, 'relación de proveedor', 15, 1);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (3, 'relación de proveedor', 15, 2);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (4, 'relación de contacto de organización', 16, 16);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (5, 'relación de contacto de organización', 16, 17);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (6, 'relación de contacto de organización', 16, 11);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (7, 'relación de contacto de organización', 16, 10);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (8, 'relación de contacto de organización', 16, 13);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (9, 'relación de contacto de organización', 16, 12);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (10, 'empleo', 1, 16);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (11, 'relacion de cliente', 5, 10);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (12, 'relacion de cliente', 6, 10);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (13, 'relacion de cliente', 7, 10);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (14, 'relacion de cliente', 5, 16);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (15, 'relacion de cliente', 6, 16);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (16, 'relacion de cliente', 7, 16);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (17, 'relacion de cliente', 5, 9);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (18, 'relacion de cliente', 6, 9);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (19, 'relacion de cliente', 7, 9);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (20, 'relación de canal de distribución', 17, 5);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (21, 'relación de canal de distribución', 17, 6);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (22, 'relación de canal de distribución', 17, 7);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (23, 'relación de canal de distribución', 12, 17);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (24, 'relación de socios', 16, 9);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (25, 'relación de socios', 13, 9);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (26, 'relación de pertenencia', 3, 13);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (27, 'relación de pertenencia', 8, 17);
INSERT INTO `base_datos_constructoras`.`Tipo_Relacion_Party` (`idTipoRelacionParty`, `nom_Tipo_RP`, `idTipo_rol_party1`, `idTipo_rol_party2`) VALUES (28, 'relación de pertenencia', 11, 17);

COMMIT;


-- -----------------------------------------------------
-- Data for table `base_datos_constructoras`.`Rol`
-- -----------------------------------------------------
START TRANSACTION;
USE `base_datos_constructoras`;
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (1, 'Persona', 1, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (2, 'Persona', 2, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (3, 'Persona', 3, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (4, 'Persona', 4, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (5, 'Cliente', 5, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (6, 'Cliente', 6, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (7, 'Cliente', 7, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (8, 'Organización', 8, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (9, 'Organización', 9, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (10, 'Organización', 10, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (11, 'Organización', 11, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (12, 'Organización', 12, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (13, 'Organización', 13, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (14, 'Organización', 14, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (15, 'Organización', 15, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (16, 'Organización', 16, NULL, NULL);
INSERT INTO `base_datos_constructoras`.`Rol` (`idRol`, `nom_rol`, `idTipo_rol`, `fecha_inicio`, `fecha_fin`) VALUES (17, 'Organización', 17, NULL, NULL);

COMMIT;

INSERT INTO `party` VALUES ('PT-1000000',1),('PT-1000001',1),('PT-1000002',1),('PT-1000003',1),('PT-1000004',1),('PT-1000005',1),('PT-1000006',1),('PT-1000007',1),('PT-1000008',1),('PT-1000009',1),('PT-1000010',1),('PT-1000011',1),('PT-1000012',1),('PT-1000013',1),('PT-1000014',1),('PT-1000015',1);
INSERT INTO `persona` VALUES ('PT-1000000','Anderson','Nilupu Ramirez','2021-07-06','M',21,'72387619','1998-05-02',1),('PT-1000001','Oscar','Lobaton','2021-07-06','M',20,'72387632','1998-05-01',1),('PT-1000002','Kevin','Aguilar','2021-07-04','M',19,'72387612','1998-05-03',1),('PT-1000003','Juan','Garibay','2021-07-02','M',18,'72387623','1998-05-12',1),('PT-1000004','Moises','Mamani','2021-07-04','M',20,'72387345','1998-05-21',1),('PT-1000005','Patrick','Huillca','2021-07-08','M',22,'72334361','1998-05-23',1),('PT-1000006','Fernando','Carrion','2021-07-04','M',19,'72323414','1998-05-12',1),('PT-1000007','Javier','Acunia','2021-07-02','M',21,'72382432','1998-05-23',1),('PT-1000008','Adrian','Carhuavilca','2021-07-01','M',24,'72387623','1998-05-12',1),('PT-1000009','Sebastian','Egoavil','2021-07-04','M',25,'73242123','1998-05-14',1),('PT-1000010','Kevin','Chirihuana','2021-07-06','M',21,'72342149','1998-05-04',1),('PT-1000011','Sthefanny','Calderon','2021-07-10','F',20,'74521564','2000-05-30',1),('PT-1000012','Vielka','Salas','2021-07-09','F',22,'74215354','1998-05-04',1),('PT-1000013','Margarita','Valencia','2021-07-07','F',21,'74215241','1999-07-01',1),('PT-1000014','Maura','Lovon','2021-07-06','F',20,'73654158','2000-05-01',0),('PT-1000015','Jhon','Gonzales','2021-06-04','M',21,'74521657','2000-04-01',0);

insert into estado_persona values(1,'Activo','');
insert into estado_persona values(2,'Inactivo','');
insert into cargo values(1,"Administrador");
insert into cargo values(2,"Secretaria");
insert into cargo values(3,"Analista de ventas");
insert into cargo values(4,"Vendedor");
insert into privilegio values(3,"Gestionar ventas y entrevistas de contructoras",3);
insert into party values('PT-1000000',1);
insert into persona values('PT-1000000','Anderson','Nilupu Ramirez',curdate(),'M',0,'72387619','1998-05-02',1);
insert into usuario values('USU-100000','123456',3,curdate(),4,0,0,'','PT-1000000');

-- Procedimietnos Almacenados --

delimiter $$
create procedure sp_autogenerar_id_const()
begin
    declare contador int;
	set contador = (select max(substring_index(idConstruccion,'-',-1))+1 from construccion);
    if contador > 0 then
		select concat('CT-',contador) as id_const;
    else
		select 'CT-1000000' as id_const; 
    end if;
end$$
delimiter $$;

delimiter $$
create procedure sp_listar_const_priv()
begin
	select c.idconstruccion,c.nom_construccion,c.ubicacion,c.direccion,cp.tipo_edificacion,
    c.etapa_construccion,c.fecha_fin_construccion,cp.constructora,ec.nom_estado_construccion
    from construccion c join c_privada cp on c.idconstruccion=cp.idconstruccion
    join estado_construccion ec on c.idestado_construccion=ec.idestado_construccion;
end$$
delimiter $$;
call sp_listar_const_priv;

delimiter $$
create procedure sp_registrar_const_priv(
id_const varchar(10),
p_nombre varchar(500),
p_etapa varchar(500),
p_ubicacion varchar(1000),
p_direccion varchar(2000),
p_tipo_const varchar(300),
p_estado int,
p_descr varchar(3000),
p_fecha_cul date,
p_id_usuario varchar(10),
p_pagina varchar(500),
p_url varchar(1000),
p_tipo_edif varchar(400),
p_area_techada varchar(450),
p_area_total varchar(450),
p_constructora varchar(500),
p_financ varchar(500))
begin
	declare cod_const varchar(10);
	if exists(select url from c_privada where url=p_url) then
		set cod_const = (select idconstruccion from c_privada where url=p_url);
		update construccion set etapa_construccion=p_etapa,idestado_construccion=p_estado,fecha_actualizacion=curdate()
        where idconstruccion=cod_const;
    else
		insert into construccion values(id_const,p_nombre,p_etapa,p_ubicacion,p_direccion,p_tipo_const,p_estado,'1',p_descr,curdate(),p_fecha_cul,null,p_id_usuario);
		insert into c_privada values(id_const,p_pagina,p_url,p_tipo_edif,p_area_techada,p_area_total,p_constructora,p_financ);
	end if;
end$$
delimiter $$;

delimiter $$
create procedure sp_listar_const_pub()
begin
	select c.idconstruccion,cp.cod_infobras,cp.entidad,c.ubicacion,cp.presupuesto,cp.modalidad,ec.nom_estado_construccion
    from construccion c join c_publica cp on c.idconstruccion=cp.idconstruccion
    join estado_construccion ec on c.idestado_construccion=ec.idestado_construccion;
end$$
delimiter $$;

delimiter $$
create procedure sp_buscar_const_priv(
id_const varchar(10))
begin
	select c.idconstruccion,c.nom_construccion,c.ubicacion,c.direccion,cp.tipo_edificacion,
    c.etapa_construccion,c.fecha_fin_construccion,cp.constructora,ec.nom_estado_construccion,
    c.descripcion_construccion,cp.financiamiento
    from construccion c join c_privada cp on c.idconstruccion=cp.idconstruccion
    join estado_construccion ec on c.idestado_construccion=ec.idestado_construccion
    where c.idconstruccion=id_const;
end$$
delimiter $$;

delimiter $$
create procedure sp_registrar_const_pub(
id_const varchar(10),
p_etapa varchar(500),
p_ubicacion varchar(1000),
p_tipo_const varchar(300),
p_estado int,
p_descrip varchar(3000),
id_usuario varchar(10),
p_codigo varchar(10),
p_entidad varchar(1000),
p_modalidad varchar(500),
p_presupuesto varchar(300),
p_estado_o varchar(300))
begin
	declare cod_const varchar(10);
	if exists(select cod_infobras from c_publica where cod_infobras=codigo) then
		set cod_const = (select cod_infobras from c_publica where cod_infobras=codigo);
		update construccion set etapa=p_etapa,idestado_construccion=p_estado,fecha_actualizacion=curdate() 
        where idconstruccion=cod_const and cod_infobras=p_codigo;
        update c_publica set estado_o=p_estado_o where idconstruccion=id_const;
    else
		insert into construccion values(id_const,'',p_etapa,p_ubicacion,'',p_tipo_const,p_estado,'1',p_descrip,curdate(),null,null,id_usuario);
		insert into c_publica values(id_const,p_codigo,p_entidad,p_modalidad,p_presupuesto,p_estado_o);
	end if;
end$$
delimiter $$;

delimiter $$
create procedure sp_buscar_const_pub(
id_const varchar(10))
begin
	select c.idconstruccion,cp.entidad,cp.cod_infobras,c.ubicacion,c.descripcion_construccion,
    cp.presupuesto,cp.modalidad,cp.estado_o,ec.nom_estado_construccion
    from construccion c join c_publica cp on c.idconstruccion=cp.idconstruccion
    join estado_construccion ec on c.idestado_construccion=ec.idestado_construccion
    where c.idconstruccion=id_const;
end$$
delimiter $$;
insert into mecanismo_contacto values('1','email','1','anderson.anr.15@gmail.com');
delimiter $$
create procedure sp_listar_empleados()
begin
	select p.idparty,p.nombre_p,p.apellido_p,p.dni,p.fecha_nacimiento,mc.descripcion,ep.nom_estado_persona 
    from persona p join estado_persona ep on p.idestado_persona=ep.idestado_persona
    join party pa on p.idparty=pa.idparty
    join party_mecanismo_contacto pmc on pa.idparty=pmc.idparty
    join mecanismo_contacto mc on pmc.idmeccont=mc.idmeccont;
end$$
delimiter $$;
call sp_listar_empleados;